package ch10.item74;

/*
 * item74. 메소드가 던지는 모든 예외를 문서화하라
 *
 *  검사 예외는 항상 따로따로 선언하고,
 * 각 예외가 발생하는 상황을 자바독의 @throws 태그로 정확히 문서화해야 함
 * Exception이나 Throwable같은
 * 공통 상위 클래스 하나로 뭉뜽그려 선언하면 안됨
 * 왜냐하면 메소드 사용자에게 각 예외에 대처할 힌트를 주지 못하고,
 * 같은 맥락에서 발생할 수 있는 다른 예외들도 삼켜버릴 수 있음
 * 단, main은 JVM만이 호출해서 Exception을 던지도록 선언해도 됨
 *
 *  비검사 예외도 검사 예외처럼 정성껏 문서화해두면 좋음
 * 일으킬 수 있는 오류들이 무엇인지 알려주면
 * 프로그래머는 해당 오류가 나지 않도록 조심하게 됨
 *
 *  메소드가 던질 수 있는 예외를 @throws로 문서화하되,
 * 비검사 예외는 메소드 선언의 throws 목록에 넣지 말아야 함
 * 검사 예외인지 비검사 예외인지에 따라 API 사용자가 해야 할 일이
 * 달라지기 때문에 둘을 확실히 구분해야 함
 *
 *  비검사 예외 모두를 문서화하는 것이 현실적으로 불가능할 때도 있음
 * 클래스를 수정하면서 새 비검사 예외를 던져도 호환성이 유지되어서,
 * 수정된 클래스를 사용하는 메소드는 언급되지 않은 비검사 예외를 전파하게 됨
 *
 *  한 클래스에 정의된 많은 메소드가 같은 이유로 같은 예외를 던진다면
 * 클래스 설명에 추가하는 방법도 있음
 *
 * 
 *
 *
 */
public class item74 {
}
