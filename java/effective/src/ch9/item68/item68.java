package ch9.item68;

/*
 * item68. 일반적으로 통용되는 명명 규칙을 따르라
 *
 *  자바의 명명 규칙 범주 두 가지
 * 1. 철자 규칙
 *  특별한 이유가 없는 한 반드시 따라야 하는 구칙
 * 이 규칙을 어기면 사용하기 어렵고, 유지보수하기 어려움
 *
 *  패키지와 모듈 이름
 * - .으로 구분
 * - 요소들은 소문자 알파벳과 숫자로 구성
 * - 바깥에서도 사용될 패키지라면 인터넷 도메인 역순으로 사용
 * - 패키지 이름의 나머지는 해당 패키지를 설명하는 하나 이상의
 *  요소로, 한 단어 혹은 약어로 이루어짐
 * - 많은 기능을 제공하는 경우 도메인 이름 뒤에
 * 계층을 나눠 더 많은 요소로 구성해도 됨
 *
 *  클래스와 인터페이스 이름
 * - 하나 이상의 단어로 구성
 * - 각 단어는 대문자로 시작
 * - 널리 통용되는 줄임말을 제외하고는 줄여 쓰지 않음
 * - 약자는 첫 글자만 대문자로 해야 시작과 끝을 명확히 알 수 있음
 *
 *  메소드와 필드 이름
 * - 소문자로 시작
 * - 나머지는 클래스 명명 규칙과 같음
 *
 *  상수 필드
 * - 모두 대문자
 * - 단어 사이는 밑줄로 구분
 *
 *  지역변수
 * - 다른 멤버와 비슷한 명명 규칙
 * - 약어를 써도 문맥을 유추할 수 있기 때문에 사용해도 됨
 *
 *  타입 매개변수
 * - 임의 타입 T
 * - 컬렉션 원소 타입 E
 * - 맵의 키와 값에는 K, V
 * - 예외 X
 * - 메소드 반환 타입 R
 * - 임의 타입 시퀀스 T, U, V 또는 T1, T2, T3
 *
 * 2. 문법 규칙
 *  패키지에 대한 규칙은 없음
 * 
 *  객체 생성 가능한 클래스 이름
 * - 단수 명사나 명사구 사용 (Thread, PriorityQueue 등)
 * 
 *  객체 생성 불가능한 클래스 이름
 * 1) 복수형 명사 사용 (Collectors 등)
 * 2) able, ible로 끝나는 형용사 사용 (Runnable, Iterable 등)
 *
 *  메소드 이름
 * 1) 동사나 동사구 사용 (append, drawImage)
 * 2) boolean 값을 반환하는 메소드라면 is, has로 시작하고
 *   명사나 명사구, 형용사로 기능하는 단어나 구로 끝남 (isDigit, isEmpty 등)
 * 3) 반환 타입이 boolean이 아니거나 인스턴스 속성을 반환하는 메소드는
 *   명사, 명사구, get으로 시작하는 동사구 사용 (size, hashCode, getTime 등)
 *  
 *  특별한 메소드 이름
 * 1) 객체 타입을 바꿔서 다른 타입의 또다른 객체를 반환하는 인스턴스 메소드
 *    보통 toType 형태 사용 (toString, toArray 등)
 * 2) 객체의 내용을 다른 뷰로 보여주는 메소드
 *    asType 형태로  사용 (asList 등)
 * 3) 객체 값을 기본 타입 값으로 반환하는 메소드
 *    typeValue 형태로 사용 (intValue 등)
 * 4) 정적 팩토리 이름은 다양하지만,
 *    from, of, valueOf, instance, getInstance, newInstance,
 *    getTpye, newType을 주로 사용
 * 
 *  필드 이름은 직접 노출될 일이 거의 없음
 * 중요성
 * 필드 이름 << 클래스, 인터페이스, 메소드 이름
 */
public class item68 {
}
